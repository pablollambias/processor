#Immediate Arithmetic Operation.

#ADDIU

ADDIU $0, $1, 5  #0, bc 0 register should stay 0

ADDIU $1, $1, 6  #6

ADDIU $2, $2, 1  #1

ADDIU $3, $3, 2  #2

ADDIU $4, $4, 3  #3

ADDIU $5, $0, 2  #2

ADDIU $6, $6, 1000 #1000

ADDIU $7, $1, 10 #16 6+10=16

ADDIU $8, $0, 32767 #32767, max int to a zero

ADDIU $9, $2, 0 #1

ADDIU $10, $5, 32767 #32769 adding a max int to a nonzero value

ADDIU $11, $0, -20 #-20 adding negative to zero

ADDIU $12, $5, -32767 #-32765 adding a min int to a nonzero value

ADDIU $13, $7, 2  #18

ADDIU $14, $7, 2  #18

#ADDIU with hazards

ADDIU $15, $13, 5  #23, WB to EX Forward

ADDIU $16, $15, 3 #26, MEM to Ex Forward

ADDIU $17, $14, 1  #19, checks that register reads on falling edge so write and read from register can happen in same cycle.

#ANDI

ANDI $18, $0, 0 #0, 0 AND 0, testing zero

ANDI $19, $4, 3 #3, 3 AND 3, testing same number

ANDI $20, $6, 1243 #200 , testing a random number(dif numbers)

#ANDI with hazards
ANDI $21, $19, 1 #1 WB to EX Forward

ANDI $22, $21, 3726  #0 MEM to EX Forward

ANDI $23, $20, 2893  #72, checks that register reads on falling edge so write and read from register can happen in same cycle.

#ORI
ORI $24, $0, 0 #0, 0 OR 0, testing zero

ORI $25, $20, 200 #200, 200 OR 200, testing same number

ORI $26, $1, 1243 #1247 , testing a random number(dif numbers)

ORI $27, $19, 4 #7, no similar bits

#ORI with hazards
ORI $28, $25, 1 #201 WB to EX Forward

ORI $29, $27, 782  #783 MEM to EX Forward

ORI $30, $26, 289  #1535, checks that register reads on falling edge so write and read from register can happen in same cycle.

#XORI
XORI $31, $0, 0 #0, 0 OR 0, testing zero

XORI $1, $20, 200 #0, 200 XOR 200, testing same number

XORI $2, $26, 5672 #4855 , testing a random number(dif numbers)

XORI $3, $19, 4 #7, no similar bits

#XORI with hazards
XORI $4, $2, 1 #4854 WB to EX Forward

XORI $5, $4, 782  #4600 MEM to EX Forward

XORI $6, $3, 989  #986, checks that register reads on falling edge so write and read from register can happen in same cycle.

#SLTI
SLTI $7, $29, 783  #0 equal

SLTI $8, $30, 2987  #1 less than

SLTI $9, $27, 5  #0 greater than

#SLTI with hazards
SLTI $10, $8, 2757  #1 WB to EX Forward

SLTI $11, $10, 2987  #1, MEM to EX Forward

SLTI $12, $9, 56  #1, checks that register reads on falling edge so write and read from register can happen in same cycle.

#SLTIU
SLTIU $13, $29, 783  #0 equal

SLTIU $14, $30, 2987  #1 less than

SLTIU $15, $27, 5  #0 greater than

#SLTIU with hazards
SLTIU $16, $14, 2757  #1 WB to EX Forward

SLTIU $17, $16, 2987  #1, MEM to EX Forward

SLTIU $18, $15, 56  #1, checks that register reads on falling edge so write and read from register can happen in same cycle.

#R-Type

#ADDU

ADDIU $19, $0, 32767 #32767, max int to a zero, using this op to test later op

ADDU $20, $27, $30 #1542 adding 2 dif non zeros

ADDU $21, $0, $0 #0, adding zeros

ADDU $22, $0, $4 #4854 adding pos to zero

ADDU $23, $19, $3 #32774 max int plus positive

#ADDU with hazards

ADDU $24, $22, $16  #4855, WB to EX Forward A

ADDU $25, $17, $24  #4856, MEM to Ex Forward B

ADDU $26, $23, $18  #32775, checks that register reads on falling edge so write and read from register can happen in same cycle.

ADDU $27, $25, $26 #37631 double forwarding

ADDU $28, $1, $2 #4861 for future test

ADDU $28, $3, $4 #4861 for next test

ADDU $29, $28, $5 #9461 testing that mem to ex forwarding is prioritized over wb to ex forwarding. A

#SUBU
ADDIU $30, $0, -32767 #-32767 storing min int for future tests

SUBU $31, $0, $19 #-32767 subtracting max int from 0

SUBU $1, $0, $0 #0, subtracting zeros

SUBU $2, $19, $19 #0 max int - max int=0

SUBU $3, $28, $27 #-32770 subtracting two pos

SUBU $4, $30, $27 # -70398 min int - pos int


#SUBU with hazards

SUBU $5, $16, $3  #32771, WB to EX Forward B

SUBU $6, $5, $17 #32770, MEM to Ex Forward A

SUBU $7, $18, $4  #70399, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward B

SUBU $8, $6, $7 #-37629 double forwarding

SUBU $9, $1, $2 #... for future test

SUBU $9, $3, $4 #37628 for next test

SUBU $10, $9, $5 #4857 testing that mem to ex forwarding is prioritized over wb to ex forwarding.

#AND

AND $11, $0, $0 #0, 0 AND 0, testing zero

AND $12, $4, $4 #-70398,testing same number

AND $13, $6, $2 #0 , testing 2 random registers

#AND with hazards
AND $14, $12, $1 #0 WB to EX Forward A

AND $15, $10, $14  #0, MEM to EX Forward B

AND $16, $13, $3  #0, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward A

#OR
OR $17, $0, $0 #0, 0 OR 0, testing zero

OR $18, $20, $20 #1542, testing same number

OR $19, $1, $8 #-37629 , testing a random registers

#OR with hazards
OR $20, $18, $4 #-69882 WB to EX Forward A

OR $21, $20, $6  #-69882 MEM to EX Forward A

OR $22, $19, $7  #-32769, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward A

OR $23, $5, $21 #-69881 WB to EX Forward B

OR $24, $2, $23  #-69881 MEM to EX Forward B

OR $25, $19, $22  #-32769, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward B

#XOR
XOR $26, $0, $0 #0, testing zeros

XOR $27, $20, $20 #0, testing same number

XOR $28, $15, $10 #4857 , testing a random registers

#XOR with hazards
XOR $29, $2, $27 #0 WB to EX Forward B

XOR $30, $30, $12  #93443 MEM to EX Forward A

XOR $31, $28, $4  #-65541, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward A

#NOR
NOR $1, $0, $0 #-1, testing zeros

NOR $2, $20, $20 #69881, testing same number

NOR $3, $15, $10 #-4858 , testing a random registers

#NOR with hazards
NOR $4, $2, $27 #-69882 WB to EX Forward A

NOR $5, $30, $4  #4344 MEM to EX Forward B

NOR $6, $28, $3  #0, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward B

#SLT
SLT $7, $29, $29  #0 equal

SLT $8, $29, $30  #1 less than

SLT $9, $28, $27  #0 greater than

#SLT with hazards
SLT $10, $8, $27  #0 WB to EX Forward

SLT $11, $10, $29  #0, MEM to EX Forward

SLT $12, $9, $28  #1, checks that register reads on falling edge so write and read from register can happen in same cycle.

#SLTU
SLTU $13, $29, $29  #0 equal

SLTU $14, $30, $29  #0 less than

SLTU $15, $29, $30  #1 greater than

#SLTU with hazards
SLTU $16, $14, $8  #0 WB to EX Forward A

SLTU $17, $2, $16  #0, MEM to EX Forward B

SLTU $18, $15, $10  #0, checks that register reads on falling edge so write and read from register can happen in same cycle. Forward A

#Move Operations

#MOVN
MOVN $19, $10, $0 #-37629  $19 should not change

MOVN $20, $11, $30 #0, register $20 should change

#MOVN with hazards

MOVN $21, $19, $28 #-37629 WB to EX Forward A

MOVN $22, $2, $21  #69881, MEM to EX Forward B

#MOVZ
MOVZ $23, $10, $0 #-69881  should change on 0

MOVZ $24, $11, $30 #0, register should not change on non 0

#MOVZ with hazards

MOVZ $25, $19, $23 #-37629 WB to EX Forward A

MOVZ $26, $25, $10  #0, MEM to EX Forward B